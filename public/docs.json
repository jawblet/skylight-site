{
  "src/lib/components/Accordion/Accordion.js": {
    "description": "",
    "displayName": "Accordion",
    "methods": [],
    "props": {
      "width": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "src/lib/components/Accordion/AccordionDropdown.js": {
    "description": "",
    "displayName": "AccordionDropdown",
    "methods": [],
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      }
    }
  },
  "src/lib/components/Accordion/AccordionTitle.js": {
    "description": "",
    "displayName": "AccordionTitle",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Id to collapse/expand the correct panel"
      },
      "defaultChecked": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If the panel is open or closed by default",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Children"
      }
    }
  },
  "src/lib/components/Badge/Badge.js": {
    "description": "",
    "displayName": "Badge",
    "methods": [],
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onClick"
      },
      "value": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Number to display in badge",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/Banner/Banner.js": {
    "description": "",
    "displayName": "Banner",
    "methods": [],
    "props": {
      "in": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": "Trigger banner entry"
      },
      "timeout": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Timeout in milliseconds before Banner disappears",
        "defaultValue": {
          "value": "5000",
          "computed": false
        }
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'info'",
              "computed": false
            },
            {
              "value": "'error'",
              "computed": false
            },
            {
              "value": "'success'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Banner type",
        "defaultValue": {
          "value": "\"info\"",
          "computed": false
        }
      },
      "text": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Banner text"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Styles"
      }
    }
  },
  "src/lib/components/Banner/Flag.js": {
    "description": "",
    "displayName": "Flag",
    "methods": [],
    "props": {
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'info'",
              "computed": false
            },
            {
              "value": "'error'",
              "computed": false
            },
            {
              "value": "'success'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Banner type"
      },
      "text": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Banner text"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Styles"
      }
    }
  },
  "src/lib/components/Breadcrumbs/Breadcrumbs.js": {
    "description": "",
    "displayName": "BreadCrumbs",
    "methods": []
  },
  "src/lib/components/Button/Button.js": {
    "description": "",
    "displayName": "Button",
    "methods": [],
    "props": {
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Button label"
      },
      "kind": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'highlight'",
              "computed": false
            },
            {
              "value": "'lowlight'",
              "computed": false
            },
            {
              "value": "'bright'",
              "computed": false
            },
            {
              "value": "'neutral'",
              "computed": false
            },
            {
              "value": "'inline'",
              "computed": false
            },
            {
              "value": "'warning'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Kind of button style",
        "defaultValue": {
          "value": "\"inline\"",
          "computed": false
        }
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "\"button\"",
              "computed": false
            },
            {
              "value": "\"submit\"",
              "computed": false
            },
            {
              "value": "\"reset\"",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Function of button",
        "defaultValue": {
          "value": "\"button\"",
          "computed": false
        }
      },
      "CTA": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "CTA (Call To Action) buttons that prompt big actions have a rounder style",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onClick"
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disabled state",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "id": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Data id"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      }
    }
  },
  "src/lib/components/Button/IconButton.js": {
    "description": "",
    "displayName": "IconButton",
    "methods": [],
    "props": {
      "kind": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "\"fill\"",
              "computed": false
            },
            {
              "value": "\"empty\"",
              "computed": false
            },
            {
              "value": "\"active\"",
              "computed": false
            },
            {
              "value": "\"warning\"",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Button style",
        "defaultValue": {
          "value": "\"empty\"",
          "computed": false
        }
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "\"button\"",
              "computed": false
            },
            {
              "value": "\"submit\"",
              "computed": false
            },
            {
              "value": "\"reset\"",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Function of button",
        "defaultValue": {
          "value": "\"button\"",
          "computed": false
        }
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onClick"
      },
      "handleMouseEnter": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call oneMouseEnter"
      },
      "handleMouseLeave": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call oneMouseLeave"
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disabled state",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "id": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Data id"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      }
    }
  },
  "src/lib/components/ButtonBar/ButtonBar.js": {
    "description": "",
    "displayName": "ButtonBar",
    "methods": [],
    "props": {
      "direction": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "\"row\"",
              "computed": false
            },
            {
              "value": "\"column\"",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Direction of button bar",
        "defaultValue": {
          "value": "\"row\"",
          "computed": false
        }
      },
      "divide": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Divide the buttons"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Children"
      }
    }
  },
  "src/lib/components/Card/Card.js": {
    "description": "",
    "displayName": "Card",
    "methods": [],
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Component's children"
      }
    }
  },
  "src/lib/components/Checkbox/Checkbox.js": {
    "description": "",
    "displayName": "Checkbox",
    "methods": [],
    "props": {
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Box label"
      },
      "size": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "\"big\"",
              "computed": false
            },
            {
              "value": "\"small\"",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Box size",
        "defaultValue": {
          "value": "\"small\"",
          "computed": false
        }
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Checkbox and label id"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Value"
      },
      "checked": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If the default state is checked or not",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disabled state"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      }
    }
  },
  "src/lib/components/Drawer/Drawer.js": {
    "description": "",
    "displayName": "Drawer",
    "methods": [],
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Component's children"
      }
    }
  },
  "src/lib/components/Input/Input.js": {
    "description": "",
    "displayName": "Input",
    "methods": [],
    "props": {
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Textarea label"
      },
      "inline": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If the textarea is inline"
      },
      "fail": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Failed state"
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Size"
      },
      "name": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Name"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Value"
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Placeholder"
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disabled state"
      },
      "readOnly": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Read-only state"
      },
      "autofocus": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If input autofocuses"
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onClick"
      },
      "handleBlur": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onBlur"
      },
      "handleKeyDown": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onKeydown"
      },
      "handleChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onChange"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "width": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Width",
        "defaultValue": {
          "value": "\"100%\"",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      }
    }
  },
  "src/lib/components/Input/Password.js": {
    "description": "",
    "displayName": "Password",
    "methods": []
  },
  "src/lib/components/Input/Textarea.js": {
    "description": "",
    "displayName": "Textarea",
    "methods": [],
    "props": {
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Textarea label"
      },
      "inline": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If the textarea is inline"
      },
      "fail": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Failed state"
      },
      "rows": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Number of initial rows",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      },
      "name": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Name"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Value"
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Placeholder"
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disabled state"
      },
      "readOnly": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Read-only state"
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onClick"
      },
      "handleBlur": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onBlur"
      },
      "handleKeyDown": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onKeydown"
      },
      "handleChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onChange"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "width": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Width"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      }
    }
  },
  "src/lib/components/Loader/Loader.js": {
    "description": "",
    "displayName": "Loader",
    "methods": [],
    "props": {
      "inline": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Inline or full-page"
      }
    }
  },
  "src/lib/components/Menu/Menu.js": {
    "description": "",
    "displayName": "Menu",
    "methods": [],
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Component's children"
      }
    }
  },
  "src/lib/components/Menu/MenuItem.js": {
    "description": "",
    "displayName": "MenuItem",
    "methods": [],
    "props": {
      "nav": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      },
      "link": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      },
      "dropdown": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      },
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onClick"
      },
      "value": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Component value"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Component's children"
      }
    }
  },
  "src/lib/components/Modal/Modal.js": {
    "description": "",
    "displayName": "Modal",
    "methods": [],
    "props": {
      "open": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": "Defines if the modal appears"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The modal contents"
      },
      "zIndex": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Z-index of the modal",
        "defaultValue": {
          "value": "4",
          "computed": false
        }
      },
      "backgroundZIndex": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Z-index of the modal background",
        "defaultValue": {
          "value": "3",
          "computed": false
        }
      },
      "width": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "The modal width",
        "defaultValue": {
          "value": "\"40rem\"",
          "computed": false
        }
      },
      "height": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "The modal height"
      },
      "showCloseButton": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If the modal close button appears",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "onOpen": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback function when the modal opens"
      },
      "onClose": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback function when the modal closes"
      }
    }
  },
  "src/lib/components/Notification.js": {
    "description": "",
    "displayName": "Notification",
    "methods": []
  },
  "src/lib/components/Paginate/Paginate.js": {
    "description": "",
    "displayName": "Paginate",
    "methods": [],
    "props": {
      "page": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": "Current page"
      },
      "totalPages": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": "Total pages"
      },
      "prevPage": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If the previous page exists"
      },
      "nextPage": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If the next page exists"
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onClick"
      }
    }
  },
  "src/lib/components/Tabs/Tab.js": {
    "description": "",
    "displayName": "Tab",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "Id"
      },
      "active": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Active state"
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Handle click"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Component children"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom className"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom styles"
      }
    }
  },
  "src/lib/components/Tabs/Tabs.js": {
    "description": "",
    "displayName": "Tabs",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "<Tab/> children"
      }
    }
  },
  "src/lib/components/Tag/Tag.js": {
    "description": "",
    "displayName": "Tag",
    "methods": [],
    "props": {
      "bg": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Background color"
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Color"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Children"
      },
      "kind": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'highlight'",
              "computed": false
            },
            {
              "value": "'lowlight'",
              "computed": false
            },
            {
              "value": "'neutral'",
              "computed": false
            },
            {
              "value": "'dark'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Kind of tag style",
        "defaultValue": {
          "value": "'neutral'",
          "computed": false
        }
      },
      "chip": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If the tag is a chip"
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onClick"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      }
    }
  },
  "src/lib/components/Tag/TagPreview.js": {
    "description": "",
    "displayName": "TagPreview",
    "methods": []
  },
  "src/lib/components/Toggle/Toggle.js": {
    "description": "",
    "displayName": "Toggle",
    "methods": [],
    "props": {
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Toggle label"
      },
      "checked": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Initial checked state",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onClick"
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disabled state"
      }
    }
  },
  "src/lib/components/Tooltip/Tooltip.js": {
    "description": "",
    "displayName": "Tooltip",
    "methods": [],
    "props": {
      "open": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": "If tooltip appears"
      },
      "direction": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'top'",
              "computed": false
            },
            {
              "value": "'bottom'",
              "computed": false
            },
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Tooltip orientation",
        "defaultValue": {
          "value": "\"top\"",
          "computed": false
        }
      },
      "text": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Tooltip text"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom style"
      }
    }
  },
  "src/lib/components/animate/Blur.js": {
    "description": "",
    "displayName": "Blur",
    "methods": [],
    "props": {
      "in": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": "When the transition comes in"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Component children"
      }
    }
  },
  "src/lib/components/animate/DropdownY.js": {
    "description": "",
    "displayName": "DropdownY",
    "methods": [],
    "props": {
      "in": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": "When the transition comes in"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Component children"
      }
    }
  },
  "src/lib/components/animate/Fade.js": {
    "description": "",
    "displayName": "Fade",
    "methods": [],
    "props": {
      "in": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": "When the transition comes in"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Component children"
      }
    }
  },
  "src/lib/components/animate/SlideX.js": {
    "description": "",
    "displayName": "SlideX",
    "methods": [],
    "props": {
      "in": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": "When the transition comes in"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Component children"
      }
    }
  },
  "src/lib/components/atoms/Anchor.js": {
    "description": "",
    "displayName": "Anchor",
    "methods": []
  },
  "src/lib/components/atoms/Blur.js": {
    "description": "",
    "displayName": "Blur",
    "methods": []
  },
  "src/lib/components/atoms/CloseButton.js": {
    "description": "",
    "displayName": "CloseButton",
    "methods": []
  },
  "src/lib/components/atoms/Footer.js": {
    "description": "",
    "displayName": "Footer",
    "methods": []
  },
  "src/lib/components/atoms/Line.js": {
    "description": "",
    "displayName": "Line",
    "methods": []
  },
  "src/lib/components/atoms/ShowPass.js": {
    "description": "",
    "displayName": "ShowPass",
    "methods": []
  },
  "src/lib/components/layout/Flex.js": {
    "description": "",
    "displayName": "Flex",
    "methods": [],
    "props": {
      "inline": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flex or inline-flex",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "column": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Row or column",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "wrap": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Wrap or no wrap",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "left": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Justify-content: start"
      },
      "center": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Justify-content: center"
      },
      "right": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Justify-content: right"
      },
      "between": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Justify-content: space-between"
      },
      "around": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Justify-content: space-around"
      },
      "top": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Align-items: start"
      },
      "middle": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Align-items: center"
      },
      "bottom": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Align-items: end"
      },
      "gap": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Gap",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "height": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Height"
      },
      "width": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Width"
      },
      "handleClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call onClick"
      },
      "id": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Data id"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      }
    }
  },
  "src/lib/components/layout/Form.js": {
    "description": "",
    "displayName": "Form",
    "methods": []
  },
  "src/lib/components/layout/Grid.js": {
    "description": "",
    "displayName": "Grid",
    "methods": [],
    "props": {
      "inline": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Grid or inline-grid"
      },
      "columns": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Columns, ex. \"minmax(10px, 1fr) 3fr\", \"repeat(5, 1fr)\""
      },
      "rows": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Rows, ex. \"min-content 1fr min-content\", \"15rem 1fr\""
      },
      "justify": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'start'",
              "computed": false
            },
            {
              "value": "'end'",
              "computed": false
            },
            {
              "value": "'center'",
              "computed": false
            },
            {
              "value": "'stretch'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Align items along grid main axis"
      },
      "align": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'start'",
              "computed": false
            },
            {
              "value": "'end'",
              "computed": false
            },
            {
              "value": "'center'",
              "computed": false
            },
            {
              "value": "'stretch'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Align items along grid cross axis"
      },
      "gap": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Gap"
      },
      "width": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Width"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Custom classname"
      }
    }
  }
}